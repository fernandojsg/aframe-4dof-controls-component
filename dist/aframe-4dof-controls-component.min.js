!function(t){function e(i){if(n[i])return n[i].exports;var a=n[i]={exports:{},id:i,loaded:!1};return t[i].call(a.exports,a,a.exports,e),a.loaded=!0,a.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}([function(t,e){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("4dof-controls",{schema:{events:{type:"array"},length:{default:2},maxAngle:{default:115},minAngle:{default:0},target:{type:"selector"}},multiple:!1,init:function(){var t,e=this,n=this.el;if(t=this.targetEl=this.data.target||n.firstElementChild,this.controlledConnected=!1,this.handMultiplier=1,n.addEventListener("controllerconnected",function(t){e.handMultiplier="left"===t.detail.component.data.hand?-1:1,e.controlledConnected=!0}),this.prevRoll=void 0,this.data.events.length>0)for(var i=0;i<this.data.events.length;i++){var a=this.data.events[i];n.addEventListener(a,function(e){return function(n){t.emit(e,n,!1)}}(a))}},update:function(){this.minAngleRad=this.data.minAngle*THREE.Math.DEG2RAD,this.maxAngleRad=this.data.maxAngle*THREE.Math.DEG2RAD,this.angleRangeRad=this.maxAngleRad-this.minAngleRad},remove:function(){},tick:function(){if(this.controlledConnected){var t=this.handMultiplier*this.el.object3D.rotation.z;t<this.minAngleRad?t=this.minAngleRad:t>this.maxAngleRad&&(t=this.maxAngleRad),t!==this.prevRoll&&(this.targetEl.setAttribute("position",{z:-this.data.length*t/this.angleRangeRad}),this.prevRoll=t)}}})}]);